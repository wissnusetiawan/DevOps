name: 1.0.$(Rev:r)

pr: none

trigger:
    branches:
      include:
        - main

schedules:
    - cron: "0 0 * * *"
      always: true
      displayName: Daily build
      branches:
          include:
            - main

parameters:
  - name: keep
    displayName: KEEP IMAGES DELETION
    type: string
    values:
      - Keep image
  #   default: TRAEFIK

    # default: WISNU

  - name: old
    displayName: OLD IMAGES DELETION
    type: string
    values:
      - TRAEFIK
      - STAGING
      - WISNU
  #   default: WISNU
  - name: keepImage
    displayName: Keep Image?
    type: boolean
    default: false

  - name: deleteUntagged
    displayName: Delete untagged
    type: boolean
    default: true

  - name: removeLockfile
    displayName: Ignore yarn.lock?
    type: boolean
    default: false


pool:
    vmImage: ubuntu-22.04

variables:
  
  # ${{ if eq(parameters.keep, 'Delete keep image')}}:
    container_registry: 'DevOpsGuy'

  # ${{ if eq(parameters.untagged, 'Delete untagged')}}:
      # container_registry: 'DevOpsGuy'

  # ${{ if eq(parameters.old, 'Delete images older than 30 days')}}:
      # container_registry: 'DevOpsGuy'


steps:
  - task: AzureCLI@2
    displayName: Keep docker image
    inputs:
      azureSubscription: 'That DevOps Guy'
      workingDirectory: '$(System.DefaultWorkingDirectory)/bash-scripts/'
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: '$(System.DefaultWorkingDirectory)/bash-scripts/clean-up-image.sh'
      arguments: '$(container_registry)'
    condition: not(${{parameters.keepImage}})

  - task: AzureCLI@2
    displayName: Keep docker image
    inputs:
      azureSubscription: 'That DevOps Guy'
      workingDirectory: '$(System.DefaultWorkingDirectory)/bash-scripts/'
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: '$(System.DefaultWorkingDirectory)/bash-scripts/clean-up-image.sh'
      arguments: '$(container_registry)'
    condition: not(${{parameters.deleteUntagged}})
